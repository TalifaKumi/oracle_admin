Настраиваем ядро:
- Установить параметры ядра (в новых дистрибутивах, как правило, всё уже ОК):
kernel.shmmax >= 1/2 RAM в байтах (можно больше, хоть космическое число; рекомендация оракла 1/2)
        # cat /proc/sys/kernel/shmmax
        # sysctl -w kernel.shmmax=значение


kernel.shmall >= RAM/page_size (page_size обычно 4096, смотрится с помощью "getconf PAGESIZE")
        # cat /proc/sys/kernel/shmall
        # sysctl -w  kernel.shmall=2097152

getconf PAGE_SIZE
4096

Make sure that the shmall is larger, not identical, than the setting of your SGA.
For example, if you want a 12G SGA, do not set shmall to 3145728 which would be the number of pages for 12G

Set it to a value larger instead, for example 3670016, which is the number of pages equivalent to 14G:
3670016*4096=15032385536
15032385536/1024/1024/1024 = 14G


kernel.shmmni >= 4096
        # cat /proc/sys/kernel/shmmni
        # sysctl -w kernel.shmmni=4096


vm.swappiness = 100
        # cat /proc/sys/vm/swappiness
        # sysctl -w vm.swappiness=100


Настройки памяти в СУБД.
- Сложно тут давать какие-то рекомендации, кроме общих слов. Потому получается что-то вроде:
Разделить память между SGA и PGA в соотношении 60/40 (подправить с учетом исторических данных) от выделенной СУБД RAM. Пока есть небольшой запас свободной памяти и нет своппинга под пиковой нагрузкой, менять соотношение в пользу SGA - можно использовать исторические данные о размере PGA и "советчиков".

Включаем hugepages для SGA (требуется рестарт СУБД):
- Проверка:
        # cat /proc/meminfo | grep Huge
        HugePages_Total:       0    <--- должно быть не 0
        HugePages_Free:        0    <--- должно быть близко к 0
        HugePages_Rsvd:        0    <--- должно быть близко к первому значению
        HugePages_Surp:        0
        Hugepagesize:       2048 kB <--- размер hugepage


- Включить HugePages:
        sysctl -w vm.nr_hugepages=<размер_SGA / размер_hugepage + <X>


- Опционально, на время тестирования, т.к. X из предыдущего выражения должен быть больше или равняется результирующему количеству сегментов SGA. Можно поставить, например, 100, чтобы не забивать голову, а потом после запуска СУБД взять точное значение из HugePages_Rsvd.
        sysctl -w vm.nr_overcommit_hugepages=<Y>
</y>


- Где <Y> это количество страниц, которые можно "дозаказать" дополнительно к vm.nr_hugepages. Если устанавливаете этот параметр, то значение <X> можно сразу сделать равным количеству сегментов SGA.
N.B.: В старых ядрах этот параметр отсутствует, потому придётся сначала nr_hugepages сделать побольше и при запуске СУБД посмотреть, сколько реально страниц потребовалось - в /proc/meminfo поле HugePages_Rsvd.

Настройка дисковой подсистемы:
- При размещении файлов данных на выделенном томе LVM отключить опережающее чтение:
    # lvdisplay
    .....
      LV Path                /dev/debian/root
    ...
      Read ahead sectors     auto
      - currently set to     256
    .....


Отключаем:
    lvchange -r none <путь_к_тому>
