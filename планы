select sql_id,child_number,sql_text from v$sql where sql_text like '%UPDATE Z#PROPERTY A1 %';  

3mk2k7r3ykm8g            0
UPDATE Z#PROPERTY A1 SET A1.SN=NVL(A1.SN,1)+1, A1.SU=:B6 , A1.C_DATE_END = DECOD
E(LEAST(A1.C_DATE_END,:B5 ),:B1 ,:B1 -1,NVL(A1.C_DATE_END,:B1 -1)) WHERE A1.COLL
ECTION_ID=:B4 AND (A1.C_PROPERTY_TYPE = :B3 AND (NVL(A1.C_DATE_BEGIN,:B2 ) <= :B
2 OR A1.C_DATE_END >= :B1 OR :B1 IS NULL))

полученное подставляете в запрос вида


select * from table( dbms_xplan.display_cursor('3mk2k7r3ykm8g','0', 'TYPICAL'));  


Желающим получить на выходе больше букв рекомендую вместо TYPICAL использовать ALL.

SQL_ID  3mk2k7r3ykm8g, child number 0
-------------------------------------
UPDATE Z#PROPERTY A1 SET A1.SN=NVL(A1.SN,1)+1, A1.SU=:B6 ,
A1.C_DATE_END = DECODE(LEAST(A1.C_DATE_END,:B5 ),:B1 ,:B1
-1,NVL(A1.C_DATE_END,:B1 -1)) WHERE A1.COLLECTION_ID=:B4 AND
(A1.C_PROPERTY_TYPE = :B3 AND (NVL(A1.C_DATE_BEGIN,:B2 ) <= :B2 OR
A1.C_DATE_END >= :B1 OR :B1 IS NULL))

Plan hash value: 3476755081

------------------------------------------------------------------------------------------------------------
| Id  | Operation                            | Name                | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------------------------------------
|   0 | UPDATE STATEMENT                     |                     |       |       |     1 (100)|          |
|   1 |  UPDATE                              | Z#PROPERTY          |       |       |            |          |
|*  2 |   TABLE ACCESS BY INDEX ROWID BATCHED| Z#PROPERTY          |     1 |   102 |     1   (0)| 00:00:01 |
|*  3 |    INDEX RANGE SCAN                  | IDX_Z#PROPERTY_WORK |     1 |       |     1   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------------------

Query Block Name / Object Alias (identified by operation id):
-------------------------------------------------------------

   1 - UPD$1
   2 - UPD$1 / A1@UPD$1
   3 - UPD$1 / A1@UPD$1

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - filter(("A1"."C_DATE_END">=:B1 OR NVL("A1"."C_DATE_BEGIN",:B2)<=:B2 OR :B1 IS NULL))
   3 - access("A1"."COLLECTION_ID"=:B4 AND "A1"."C_PROPERTY_TYPE"=:B3)

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   2 - (upd=6,12,13; cmp=2,3,4,5,6,7,8,9,10,11) "A1".ROWID[ROWID,10], "ID"[NUMBER,22],
       "A1"."COLLECTION_ID"[NUMBER,22], "A1"."C_PROPERTY_TYPE"[NUMBER,22], "A1"."C_DATE_BEGIN"[DATE,7],
       "A1"."C_DATE_END"[DATE,7], "A1"."C_DATE_SET"[DATE,7], "C_USER"[NUMBER,22],
       "C_REF_VALUE"[VARCHAR2,128], "C_NUM_VALUE"[NUMBER,22], "C_STR_VALUE"[VARCHAR2,2000],
       "A1"."SN"[NUMBER,22], "A1"."SU"[NUMBER,22]
   3 - "A1".ROWID[ROWID,10], "A1"."COLLECTION_ID"[NUMBER,22], "A1"."C_PROPERTY_TYPE"[NUMBER,22],
       "A1"."C_DATE_BEGIN"[DATE,7]

